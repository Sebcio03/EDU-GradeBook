version: '3'

volumes:
  production_postgres_data: {}
  production_postgres_data_backups: {}

networks:
  prod: {}

services:
  vue:
    build:
      context: .
      dockerfile: ./compose/production/vue/Dockerfile
    container_name: production_vue
    platform: linux/x86_64
    volumes:
      - ./frontend/:/app:z
      - ./frontend/nginx:/etc/nginx/conf.d
    ports:
      - "80:80"
    networks:
      - prod
  django: &django
    build:
      context: .
      dockerfile: ./compose/production/django/Dockerfile
    container_name: production_django
    platform: linux/x86_64
    depends_on:
      - postgres
      - redis
    env_file:
      - .envs/.production/.django
      - .envs/.production/.postgres
    entrypoint: /entrypoint.sh
    ports:
      - "8000:8000"
    networks:
      - prod
  postgres:
    image: postgres:14
    container_name: production_postgres
    volumes:
      - production_postgres_data:/var/lib/postgresql/data:Z
      - production_postgres_data_backups:/backups:z
    env_file:
      - .envs/.production/.postgres
    networks:
      - prod

  redis:
    image: redis:6
    container_name: production_redis
    networks:
      - prod
  celeryworker:
    <<: *django
    container_name: production_celeryworker
    entrypoint: /start-celeryworker
    ports: []
  celerybeat:
    <<: *django
    container_name: production_celerybeat
    entrypoint: /start-celerybeat
    ports: []
  flower:
    <<: *django
    container_name: production_flower
    entrypoint: /start-flower
    ports: []